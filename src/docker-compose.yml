version: "3.7"

services:
  # MySQL
  db:
    image: mariadb
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql:z
    env_file:
      - ./.docker/mysql/mysql.env

  # Nginx
  server:
    build:
      context: ./.docker/nginx
    links:
      - laravel
    ports:
      - 80:80
    volumes:
      - ${WORKING_DIR}:/app
      - ./.docker/nginx/etc/nginx.conf:/etc/nginx/nginx.conf:z

  # PHP FPM
  laravel:
    build:
      context: ./.docker/php-fpm
    env_file:
      - ./.docker/xdebug/xdebug.env
    volumes:
      - ${WORKING_DIR}:/app
    links:
      - db
      - redis

  # PHP
  php:
    build:
      context: ./.docker/php-cli
    env_file:
      - ./.docker/xdebug/xdebug.env
    entrypoint: ["php"]
    depends_on:
      - db

  # Composer
  composer:
    image: composer
    volumes:
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache:z
    working_dir: /app

  # Node with NPM/Yarn/npx
  node:
    image: node
    working_dir: /app

  # redis
  redis:
    image: redis
    ports:
      - 6379:6379

  # ngrok
  ngrok:
    image: wernight/ngrok
    ports:
      - 4040:4040
    links:
      - server
    env_file:
      - ./.docker/ngrok/ngrok.env

  # phpcs
  phpcs:
    image: herloct/phpcs
    command: ["--standard=PSR1,PSR2", "--ignore=*/vendor/,*/tests/,database/,app/bootstrap/,public/", "--colors", "."]
    working_dir: /app

  # Composer
  composer:
    image: composer
    volumes:
      # Map local user Composer directory with container for cache packages
      - ~/.docker_cache/composer:/tmp/cache:z
    working_dir: /app

volumes:
  mysql_data:
    name: ${VOLUME_PREFIX}mysql_data
